@model IEnumerable<BikeSharingApp.Models.User>

@{
    ViewData["Title"] = "Users";
}

<h1>Users</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<form id="filterForm">
    <div class="form-group">
        <input type="text" id="searchInput" class="form-control" placeholder="Search by name, email, or phone" />
    </div>
</form>

<table class="table mt-3" id="userTable">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.FullName)</th>
            <th>@Html.DisplayNameFor(model => model.Email)</th>
            <th>@Html.DisplayNameFor(model => model.Phone)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr id="user-row-@item.Id">
                <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a> |
                    <button class="btn btn-danger btn-sm" data-id="@item.Id" data-name="@item.FullName"
                        onclick="deleteUser(this)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete user <strong id="userName"></strong>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let userIdToDelete = null;
        let rowToDelete = null;

        function deleteUser(button) {
            userIdToDelete = button.getAttribute('data-id');
            rowToDelete = document.getElementById(`user-row-${userIdToDelete}`);
            const userName = button.getAttribute('data-name');

            document.getElementById('userName').textContent = userName;
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }

        document.getElementById('confirmDelete').addEventListener('click', async function () {
            if (userIdToDelete) {
                try {
                    const response = await fetch(`/User/DeleteConfirmed/${userIdToDelete}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    });

                    if (response.ok) {
                        if (rowToDelete) {
                            rowToDelete.remove();
                        }
                        const deleteModal = bootstrap.Modal.getInstance(document.getElementById('deleteModal'));
                        deleteModal.hide();
                    } else {
                        console.error('Failed to delete user.');
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            }
        });

        document.getElementById('searchInput').addEventListener('input', async function () {
            let searchTerm = this.value;

            try {
                const response = await fetch(`/User/Search?searchTerm=${encodeURIComponent(searchTerm)}`);
                if (response.ok) {
                    const html = await response.text();
                    document.querySelector('#userTable tbody').innerHTML = html;
                } else {
                    console.error('Failed to fetch data.');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });
    </script>
}
